name: Deploy Static Files to S3

on:
  push:
    branches: [ main ]
    paths:
    - 'frontend/**'
    - '.github/workflows/deploy-static.yml'
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2
    
jobs:
  deploy-static:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build React app
      run: |
        cd frontend
        npm run build
      env:
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Deploy to S3
      run: |
        # S3 버킷명 가져오기
        BUCKET_NAME=$(aws s3 ls | grep static-website | awk '{print $3}')
        
        if [ -z "$BUCKET_NAME" ]; then
          echo "S3 bucket not found. Please run Terraform deployment first."
          exit 1
        fi
        
        # S3에 파일 업로드
        aws s3 sync frontend/build/ s3://$BUCKET_NAME/ \
          --delete \
          --cache-control "max-age=31536000,public" \
          --exclude "*.html" \
          --exclude "*.json"
          
        # HTML 파일은 캐시하지 않음
        aws s3 sync frontend/build/ s3://$BUCKET_NAME/ \
          --delete \
          --cache-control "no-cache,no-store,must-revalidate" \
          --include "*.html" \
          --include "*.json"
          
        echo "Static files deployed to s3://$BUCKET_NAME"
        
    - name: Invalidate CloudFront cache
      run: |
        # CloudFront 배포 ID 가져오기
        DISTRIBUTION_ID=$(aws cloudfront list-distributions \
          --query 'DistributionList.Items[?Comment==`production-cloudfront`].Id' \
          --output text)
          
        if [ ! -z "$DISTRIBUTION_ID" ]; then
          # CloudFront 캐시 무효화
          aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*"
          echo "CloudFront cache invalidated for distribution: $DISTRIBUTION_ID"
        else
          echo "CloudFront distribution not found"
        fi
